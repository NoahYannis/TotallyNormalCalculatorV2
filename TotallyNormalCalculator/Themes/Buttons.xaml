<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behavior="clr-namespace:TotallyNormalCalculator.Behavior"
    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
    xmlns:vm="clr-namespace:TotallyNormalCalculator.MVVM.ViewModels">

    <Style x:Key="BaseButton" TargetType="Button">

        <Setter Property="FontSize" Value="13" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="90" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="80" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="2"
                        CornerRadius="16">
                        <StackPanel
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <fa:IconBlock
                                FontSize="16"
                                Foreground="{Binding Path=(behavior:IconColor.IconColor), RelativeSource={RelativeSource TemplatedParent}}"
                                Icon="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue=None}" />
                            <TextBlock VerticalAlignment="Center" Text="{TemplateBinding Content}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform Y="-3" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                To="0.5"
                                Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CircleEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                To="1.0"
                                Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CircleEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style
        x:Key="DiaryButtons"
        BasedOn="{StaticResource BaseButton}"
        TargetType="Button">
        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="Opacity" Value="0.5" />

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                To="0.5"
                                Duration="0:0:1.5">
                                <DoubleAnimation.EasingFunction>
                                    <CircleEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                To="1.0"
                                Duration="0:0:1.5">
                                <DoubleAnimation.EasingFunction>
                                    <CircleEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="ViewSwitchButton"
        BasedOn="{StaticResource BaseButton}"
        TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="MediumPurple" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RoundButton" TargetType="ToggleButton">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="DataContext" Value="{x:Type vm:BlobStorageViewModel}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="2"
                        CornerRadius="20">
                        <fa:IconBlock
                            HorizontalAlignment="Right"
                            FontSize="16"
                            Foreground="{Binding Path=(behavior:IconColor.IconColor), RelativeSource={RelativeSource TemplatedParent}}"
                            Icon="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue=None}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>