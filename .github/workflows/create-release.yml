name: build-deploy

on:
  push:
    tags:
      - "totally-normal-calculator/v*"

  workflow_dispatch:

env:
  PROJECT_PATH: TotallyNormalCalculator/TotallyNormalCalculator.csproj
  PROJECT_PATH_TESTS: TotallyNormalCalculator.UnitTests/TotallyNormalCalculator.UnitTests.csproj

jobs:
  create-release:
    runs-on: windows-latest  

    steps:
      - uses: actions/checkout@v4
  
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
          include-prerelease: true

      - name: Restore dependencies
        run: dotnet restore ${{env.PROJECT_PATH}}

      - name: Build
        run: dotnet build -c Release -p:PublishSingleFile=true 

      - name: Execute Unit Tests
        run: dotnet test ${{ env.PROJECT_PATH_TESTS }}

      - name: Set User Secrets
        run: |
          dotnet user-secrets set "AZURE_BLOB_STORAGE_CONNECTION_STRING" "${{ secrets.AZURE_BLOB_STORAGE_CONNECTION_STRING }}"
          dotnet user-secrets set "AZURE_COSMOS_DB_CONNECTION_STRING" "${{ secrets.AZURE_COSMOS_DB_CONNECTION_STRING }}"

      - name: Publish # Anwendung als einzelne ausführbare Datei veröffentlichen
        run: dotnet publish ${{env.PROJECT_PATH }} -r win-x64 -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:UseAppHost=true --self-contained

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}  # Bei privaten Repositories Personal Access Token statt GITHUB_TOKEN verwenden
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
       
      - name: Add EXE To Release
        uses: csexton/release-asset-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: TotallyNormalCalculator/bin/Release/net8.0-windows/win-x64/publish/*.exe # Exe-Datei dem Release hinzufügen
          release-url: ${{ steps.create_release.outputs.upload_url }}
